{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","InputArea","className","onChange","event","handleChange","type","value","inputText","addItem","App","useState","setInputText","items","setItems","deleteItem","prevItems","filter","item","index","newValue","target","map","todoItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAceA,MAZf,SAAkBC,GAChB,OACE,qBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,KAF1B,SAKE,6BAAKH,EAAMI,UCQFC,MAff,SAAmBL,GACjB,OACE,sBAAKM,UAAU,OAAf,UACE,uBACEC,SAAU,SAACC,GAAD,OAAWR,EAAMS,aAAaD,IACxCE,KAAK,OACLC,MAAOX,EAAMY,YAEf,wBAAQX,QAAS,kBAAMD,EAAMa,WAA7B,SACE,6C,MC6COC,MAlDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBI,EAAlB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAcA,SAASC,EAAWhB,GAClBe,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUpB,QAKvB,OACE,sBAAKG,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,cAAC,EAAD,CACEG,aA1BN,SAAsBD,GACpB,IAAMgB,EAAWhB,EAAMiB,OAAOd,MAC9BK,EAAaQ,IAyBTZ,UAAWA,EACXC,QAvBN,WACEK,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBR,OAExBI,EAAa,OAqBX,8BACE,6BACGC,EAAMS,KAAI,SAACC,EAAUJ,GAAX,OACT,cAAC,EAAD,CAEEpB,GAAIoB,EACJnB,KAAMuB,EACNzB,UAAWiB,GAHNI,cChCJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d56c5f18.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ToDoItem(props) {\n  return (\n    <div\n      onClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li>{props.text}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React from \"react\";\n\nfunction InputArea(props) {\n  return (\n    <div className=\"form\">\n      <input\n        onChange={(event) => props.handleChange(event)}\n        type=\"text\"\n        value={props.inputText}\n      />\n      <button onClick={() => props.addItem()}>\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./components/ToDoItem\";\nimport InputArea from \"./components/InputArea\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function addItem() {\n    setItems((prevItems) => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea\n        handleChange={handleChange}\n        inputText={inputText}\n        addItem={addItem}\n      />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}